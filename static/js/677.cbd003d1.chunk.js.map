{"version":3,"file":"static/js/677.cbd003d1.chunk.js","mappings":"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","sources":["components/Employees/EmployeeForm.styled.js","components/Employees/EmployeeForm.js","components/Employees/EmployeeList.styled.js","components/Employees/EmployeeList.js","pages/styled/EmployeePage.styled.jsx","pages/EmployeesPage.jsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst formStyle = css`\nmargin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 20px;\n  width: 400px;\n  max-width: 90%;\n`;\n\nconst labelStyle = css`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  font-weight: bold;\n  color: #333;\n`;\nconst inputStyle = css`\n  padding: 10px;\n  font-size: 14px;\n  border: 2px solid teal;\n  border-radius: 5px;\n  margin-top: 5px;\n  &:focus {\n    outline: none;\n    border-color: black;\n  }\n`;\n\nconst buttonStyle = css`\n  padding: 10px 20px;\n  font-size: 16px;\n  color: #fff;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: transform 0.5s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const StyledForm = styled.form`\n  ${formStyle}\n`;\n\nexport const StyledLabel = styled.label`\n  ${labelStyle}\n`;\n\nexport const StyledInput = styled.input`\n  ${inputStyle}\n`;\n\nexport const StyledButton = styled.button`\n  ${buttonStyle}\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addEmployee, updateEmployee } from 'redux/employees/employeeActions';\nimport {StyledButton, StyledInput, StyledLabel, StyledForm} from './EmployeeForm.styled'\n\nconst EmployeeForm = ({ onAddEmployee, currentEmployee, setCurrentEmployee }) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [department, setDepartment] = useState('');\n  const [specialty, setSpecialty] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (currentEmployee) {\n      setFirstName(currentEmployee.firstName);\n      setLastName(currentEmployee.lastName);\n      setDepartment(currentEmployee.department);\n      setSpecialty(currentEmployee.specialty);\n    }\n  }, [currentEmployee]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newEmployee = {\n      firstName,\n      lastName,\n      department,\n      specialty,\n    };\n\n    try {\n      if (currentEmployee) {\n        console.log('Updating employee:', { ...newEmployee, _id: currentEmployee._id });\n        await dispatch(updateEmployee({ ...newEmployee, _id: currentEmployee._id }));\n      } else {\n        console.log('Adding employee:', newEmployee);\n        await dispatch(addEmployee(newEmployee));\n        onAddEmployee(newEmployee);\n      }\n      setFirstName('');\n      setLastName('');\n      setDepartment('');\n      setSpecialty('');\n      setCurrentEmployee(null);\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledLabel>\n        Ім'я:\n        <StyledInput value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n      </StyledLabel>\n      <StyledLabel>\n        Прізвище:\n        <StyledInput value={lastName} onChange={(e) => setLastName(e.target.value)} />\n      </StyledLabel>\n      <StyledLabel>\n        Відділ:\n        <StyledInput value={department} onChange={(e) => setDepartment(e.target.value)} />\n      </StyledLabel>\n      <StyledLabel>\n      Спеціальність:\n        <StyledInput value={specialty} onChange={(e) => setSpecialty(e.target.value)} />\n      </StyledLabel>\n      <StyledButton type=\"submit\">{'Зберегти'}</StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default EmployeeForm;","\nimport styled from '@emotion/styled';\n\nexport const StyledTable = styled.table`\n  width: calc(100vw - 346px);\n  margin-top: 20px;\n`;\n\nexport const StyledTableRow = styled.tr`\n  border-bottom: 1px solid #ddd;\n`;\n\nexport const StyledTableHeader = styled.th`\n  padding: 10px;\n  text-align: left;\n  border-bottom: 2px solid #ddd;\n`;\n\nexport const StyledTableCell = styled.td`\n  padding: 10px;\n  text-align: left;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 5px 10px;\n  font-size: 14px;\n  color: #fff;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-left: 5px;\n  transition: transform 0.3s;\n  transition-delay: 0.2s;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n`;\n","import React from 'react';\nimport { StyledTable, StyledTableRow, StyledTableCell, StyledTableHeader, StyledButton } from './EmployeeList.styled';\n\nconst EmployeeList = ({ employees, onEdit, onDelete }) => {\n  if (!employees || employees.length === 0) {\n    return <p>Працівників не знайдено</p>;\n  }\n\n  return (\n    <StyledTable>\n      <thead>\n        <StyledTableRow>\n          <StyledTableHeader>Ім'я</StyledTableHeader>\n          <StyledTableHeader>Прізвище</StyledTableHeader>\n          <StyledTableHeader>Відділ</StyledTableHeader>\n          <StyledTableHeader>Спеціальність</StyledTableHeader>\n          <StyledTableHeader>Дії</StyledTableHeader>\n        </StyledTableRow>\n      </thead>\n      <tbody>\n        {employees.map((employee, index) => (\n          <StyledTableRow key={employee?._id || index}>\n            <StyledTableCell>{employee?.firstName}</StyledTableCell>\n            <StyledTableCell>{employee?.lastName}</StyledTableCell>\n            <StyledTableCell>{employee?.department}</StyledTableCell>\n            <StyledTableCell>{employee?.specialty}</StyledTableCell>\n            <StyledTableCell>\n              <StyledButton onClick={() => onEdit(employee)}>Редагувати</StyledButton>\n              <StyledButton onClick={() => onDelete(employee._id)}>Видалити</StyledButton>\n            </StyledTableCell>\n          </StyledTableRow>\n        ))}\n      </tbody>\n    </StyledTable>\n  );\n};\n\nexport default EmployeeList;","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst buttonStyle = css`\npadding: 10px 20px;\nmargin: 15px;\nfont-size: 16px;\ncolor: #fff;\nbackground-color: teal;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\ntransition: transform 0.5s;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n\n&:hover {\n  transform: scale(1.05);\n}\n`;\n\nconst Title = css`\ndisplay: flex;\njustify-content: center;\n`;\nconst BgContainer = css`\nbackground-color: #F6F6F7;\n  min-height: 100vh;\n`;\nexport const StyledButton = styled.button`\n  ${buttonStyle}\n`;\n\nexport const StyledTitle = styled.h1`\n    ${Title}\n`\nexport const StyledDiv = styled.div`\n    ${BgContainer}\n`","import React, { useEffect, useState,useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EmployeeForm from 'components/Employees/EmployeeForm';\nimport EmployeeList from 'components/Employees/EmployeeList';\nimport { fetchEmployees, deleteEmployee } from 'redux/employees/employeeActions';\nimport Header from 'components/Header';\nimport Sidebar from 'components/Sidebar';\nimport Modal from '../components/ModalWindow/ModalWindow';\nimport {StyledButton, StyledTitle, StyledDiv} from './styled/EmployeePage.styled'\n\nconst EmployeesPage = () => {\n  const dispatch = useDispatch();\n  const employees = useSelector(state => state.employees.employees) || [];\n  const [currentEmployee, setCurrentEmployee] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchEmployees());\n  }, [dispatch]);\n\n  const handleAddEmployee = async (employee) => {\n    dispatch(fetchEmployees());\n    setIsModalOpen(false);\n  };\n\n  const handleEditEmployee = (employee) => {\n    setCurrentEmployee(employee);\n    setIsModalOpen(true);\n  };\n\n  const handleDeleteEmployee = async (id) => {\n    try {\n      await dispatch(deleteEmployee(id));\n      dispatch(fetchEmployees());\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n    }\n  };\n\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const myRef = useRef(null);\n  const [size, setSize] = useState({});\n\n  const resizeHandler = () => {\n    const { clientHeight, clientWidth } = myRef.current || {};\n    setSize({ clientHeight, clientWidth });\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeHandler);\n    resizeHandler();\n    return () => {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (size.clientWidth > 1439) {\n      setIsSidebarOpen(true);\n    } else {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [size.clientWidth]);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const handleClickOutside = e => {\n    const modal = document.getElementById('modal-root');\n    if (!myRef.current.contains(e.target) && !modal.contains(e.target)) {\n      setIsSidebarOpen(false);\n    }\n  };\n\n  const handleOpenModal = () => {\n    setCurrentEmployee(null);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <StyledDiv>\n    <Header openSidebar={openSidebar} />\n    <div ref={myRef}>\n        <Sidebar isOpen={isSidebarOpen} />\n      </div>\n    <div>\n      <StyledButton onClick={handleOpenModal}>Додати працівника</StyledButton>\n        <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n          <EmployeeForm\n            onAddEmployee={handleAddEmployee}\n            currentEmployee={currentEmployee}\n            setCurrentEmployee={setCurrentEmployee}\n          />\n        </Modal>\n        <StyledTitle>Список працівників</StyledTitle>\n      <EmployeeList \n        employees={employees} \n        onEdit={handleEditEmployee} \n        onDelete={handleDeleteEmployee} \n      />\n    </div>\n    </StyledDiv>\n  );\n};\n\nexport default EmployeesPage;"],"names":["formStyle","css","_templateObject","_taggedTemplateLiteral","labelStyle","_templateObject2","inputStyle","_templateObject3","buttonStyle","_templateObject4","StyledForm","styled","form","_templateObject5","StyledLabel","label","_templateObject6","StyledInput","input","_templateObject7","StyledButton","button","_templateObject8","_ref","onAddEmployee","currentEmployee","setCurrentEmployee","_useState","useState","_useState2","_slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","department","setDepartment","_useState7","_useState8","specialty","setSpecialty","dispatch","useDispatch","useEffect","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","newEmployee","wrap","_context","prev","next","preventDefault","console","log","_objectSpread","_id","updateEmployee","addEmployee","t0","error","stop","_x","apply","arguments","_jsxs","onSubmit","children","_jsx","value","onChange","target","type","StyledTable","table","StyledTableRow","tr","StyledTableHeader","th","StyledTableCell","td","employees","onEdit","onDelete","length","map","employee","index","onClick","Title","BgContainer","StyledTitle","h1","StyledDiv","div","useSelector","state","isModalOpen","setIsModalOpen","fetchEmployees","handleAddEmployee","handleDeleteEmployee","_callee2","id","_context2","deleteEmployee","_x2","isSidebarOpen","setIsSidebarOpen","myRef","useRef","size","setSize","resizeHandler","_ref3","current","clientHeight","clientWidth","window","addEventListener","removeEventListener","document","handleClickOutside","modal","getElementById","contains","Header","openSidebar","ref","Sidebar","isOpen","Modal","onClose","EmployeeForm","EmployeeList"],"sourceRoot":""}