{"version":3,"file":"static/js/677.521d6770.chunk.js","mappings":"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","sources":["components/Employees/EmployeeForm.styled.js","components/Employees/EmployeeForm.js","components/Employees/EmployeeList.styled.js","components/Employees/EmployeeList.js","pages/styled/EmployeePage.styled.jsx","pages/EmployeesPage.jsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst formStyle = css`\nmargin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 20px;\n  width: 400px;\n  max-width: 90%;\n`;\n\nconst labelStyle = css`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  font-weight: bold;\n  color: #333;\n`;\nconst inputStyle = css`\n  padding: 10px;\n  font-size: 14px;\n  border: 2px solid teal;\n  border-radius: 5px;\n  margin-top: 5px;\n  &:focus {\n    outline: none;\n    border-color: black;\n  }\n`;\n\nconst buttonStyle = css`\n  padding: 10px 20px;\n  font-size: 16px;\n  color: #fff;\n  background-color: teal;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: transform 0.5s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const StyledForm = styled.form`\n  ${formStyle}\n`;\n\nexport const StyledLabel = styled.label`\n  ${labelStyle}\n`;\n\nexport const StyledInput = styled.input`\n  ${inputStyle}\n`;\n\nexport const StyledButton = styled.button`\n  ${buttonStyle}\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addEmployee, updateEmployee } from 'redux/employees/employeeActions';\nimport {StyledButton, StyledInput, StyledLabel, StyledForm} from './EmployeeForm.styled'\n\nconst EmployeeForm = ({ onAddEmployee, currentEmployee, setCurrentEmployee }) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [department, setDepartment] = useState('');\n  const [specialty, setSpecialty] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (currentEmployee) {\n      setFirstName(currentEmployee.firstName);\n      setLastName(currentEmployee.lastName);\n      setDepartment(currentEmployee.department);\n      setSpecialty(currentEmployee.specialty);\n    }\n  }, [currentEmployee]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newEmployee = {\n      firstName,\n      lastName,\n      department,\n      specialty,\n    };\n\n    try {\n      if (currentEmployee) {\n        console.log('Updating employee:', { ...newEmployee, _id: currentEmployee._id });\n        await dispatch(updateEmployee({ ...newEmployee, _id: currentEmployee._id }));\n      } else {\n        console.log('Adding employee:', newEmployee);\n        await dispatch(addEmployee(newEmployee));\n        onAddEmployee(newEmployee);\n      }\n      setFirstName('');\n      setLastName('');\n      setDepartment('');\n      setSpecialty('');\n      setCurrentEmployee(null);\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledLabel>\n        Ім'я:\n        <StyledInput value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n      </StyledLabel>\n      <StyledLabel>\n        Прізвище:\n        <StyledInput value={lastName} onChange={(e) => setLastName(e.target.value)} />\n      </StyledLabel>\n      <StyledLabel>\n        Відділ:\n        <StyledInput value={department} onChange={(e) => setDepartment(e.target.value)} />\n      </StyledLabel>\n      <StyledLabel>\n      Спеціальність:\n        <StyledInput value={specialty} onChange={(e) => setSpecialty(e.target.value)} />\n      </StyledLabel>\n      <StyledButton type=\"submit\">{'Зберегти'}</StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default EmployeeForm;","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst Button = css`\n  padding: 5px 10px;\n  font-size: 14px;\n  color: #fff;\n  background-color: #007bff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-left: 5px;\n  transition: transform 0.3s, background-color 0.3s;\n  transition-delay: 0.2s;\n\n  &:hover {\n    transform: scale(1.05);\n    background-color: #0056b3;\n  }\n`;\n\nconst EmployeeContainer = css`\n  display: flex;\n  flex-direction: column;\n  /* width: 100%; */\n`;\n\nconst EmployeeRow = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid #ccc;\n`;\n\nconst EmployeeInfo = css`\n  flex: 1;\n  margin: 0;\n  padding: 0 10px;\n  font-size: 14px;\n`;\n\nexport const StyledButton = styled.button`\n  ${Button}\n`;\n\nexport const StyledEmployeeContainer = styled.div`\n    ${EmployeeContainer}\n`\n\nexport const StyledEmployeeRow = styled.div`\n  ${EmployeeRow}\n`;\n\nexport const StyledEmployeeInfo = styled.p`\n    ${EmployeeInfo}\n`","import React from 'react';\nimport {StyledButton, StyledEmployeeContainer, StyledEmployeeRow, StyledEmployeeInfo} from './EmployeeList.styled'\n\nconst EmployeeList = ({ employees, onEdit, onDelete }) => {\n  if (!employees || employees.length === 0) {\n    return <p>No employees found</p>;\n  }\n\n  return (\n    <StyledEmployeeContainer>\n      {employees.map((employee, index) => (\n        <StyledEmployeeRow key={employee?._id || index}>\n          <StyledEmployeeInfo>{employee?.firstName} {employee?.lastName} - {employee?.department} - {employee?.specialty}</StyledEmployeeInfo>\n          <StyledButton onClick={() => onEdit(employee)}>Edit</StyledButton>\n          <StyledButton onClick={() => onDelete(employee._id)}>Delete</StyledButton>\n        </StyledEmployeeRow>\n      ))}\n    </StyledEmployeeContainer>\n  );\n};\n\nexport default EmployeeList;","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst buttonStyle = css`\npadding: 10px 20px;\nfont-size: 16px;\ncolor: #fff;\nbackground-color: teal;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\ntransition: transform 0.5s;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n\n&:hover {\n  transform: scale(1.05);\n}\n`;\n\nconst Title = css`\ndisplay: flex;\njustify-content: center;\n`;\n\nexport const StyledButton = styled.button`\n  ${buttonStyle}\n`;\n\nexport const StyledTitle = styled.h1`\n    ${Title}\n`","import React, { useEffect, useState,useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EmployeeForm from 'components/Employees/EmployeeForm';\nimport EmployeeList from 'components/Employees/EmployeeList';\nimport { fetchEmployees, deleteEmployee } from 'redux/employees/employeeActions';\nimport Header from 'components/Header';\nimport Sidebar from 'components/Sidebar';\nimport Modal from '../components/ModalWindow/ModalWindow';\nimport {StyledButton, StyledTitle} from './styled/EmployeePage.styled'\n\nconst EmployeesPage = () => {\n  const dispatch = useDispatch();\n  const employees = useSelector(state => state.employees.employees) || [];\n  const [currentEmployee, setCurrentEmployee] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchEmployees());\n  }, [dispatch]);\n\n  const handleAddEmployee = async (employee) => {\n    dispatch(fetchEmployees());\n  };\n\n  const handleEditEmployee = (employee) => {\n    setCurrentEmployee(employee);\n  };\n\n  const handleDeleteEmployee = async (id) => {\n    try {\n      await dispatch(deleteEmployee(id));\n      dispatch(fetchEmployees());\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n    }\n  };\n\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const myRef = useRef(null);\n  const [size, setSize] = useState({});\n\n  const resizeHandler = () => {\n    const { clientHeight, clientWidth } = myRef.current || {};\n    setSize({ clientHeight, clientWidth });\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeHandler);\n    resizeHandler();\n    return () => {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (size.clientWidth > 1439) {\n      setIsSidebarOpen(true);\n    } else {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [size.clientWidth]);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const handleClickOutside = e => {\n    const modal = document.getElementById('modal-root');\n    if (!myRef.current.contains(e.target) && !modal.contains(e.target)) {\n      setIsSidebarOpen(false);\n    }\n  };\n\n  const handleOpenModal = () => {\n    setCurrentEmployee(null);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n    <Header openSidebar={openSidebar} />\n    <div ref={myRef}>\n        <Sidebar isOpen={isSidebarOpen} />\n      </div>\n    <div>\n      <StyledButton onClick={handleOpenModal}>Add Employee</StyledButton>\n        <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n          <EmployeeForm\n            onAddEmployee={handleAddEmployee}\n            currentEmployee={currentEmployee}\n            setCurrentEmployee={setCurrentEmployee}\n          />\n        </Modal>\n        <StyledTitle>Список працівників</StyledTitle>\n      <EmployeeList \n        employees={employees} \n        onEdit={handleEditEmployee} \n        onDelete={handleDeleteEmployee} \n      />\n    </div>\n    </>\n  );\n};\n\nexport default EmployeesPage;"],"names":["formStyle","css","_templateObject","_taggedTemplateLiteral","labelStyle","_templateObject2","inputStyle","_templateObject3","buttonStyle","_templateObject4","StyledForm","styled","form","_templateObject5","StyledLabel","label","_templateObject6","StyledInput","input","_templateObject7","StyledButton","button","_templateObject8","_ref","onAddEmployee","currentEmployee","setCurrentEmployee","_useState","useState","_useState2","_slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","department","setDepartment","_useState7","_useState8","specialty","setSpecialty","dispatch","useDispatch","useEffect","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","newEmployee","wrap","_context","prev","next","preventDefault","console","log","_objectSpread","_id","updateEmployee","addEmployee","t0","error","stop","_x","apply","arguments","_jsxs","onSubmit","children","_jsx","value","onChange","target","type","Button","EmployeeContainer","EmployeeRow","EmployeeInfo","StyledEmployeeContainer","div","StyledEmployeeRow","StyledEmployeeInfo","p","employees","onEdit","onDelete","length","map","employee","index","onClick","Title","StyledTitle","h1","useSelector","state","isModalOpen","setIsModalOpen","fetchEmployees","handleAddEmployee","handleDeleteEmployee","_callee2","id","_context2","deleteEmployee","_x2","isSidebarOpen","setIsSidebarOpen","myRef","useRef","size","setSize","resizeHandler","_ref3","current","clientHeight","clientWidth","window","addEventListener","removeEventListener","document","handleClickOutside","modal","getElementById","contains","_Fragment","Header","openSidebar","ref","Sidebar","isOpen","Modal","onClose","EmployeeForm","EmployeeList"],"sourceRoot":""}